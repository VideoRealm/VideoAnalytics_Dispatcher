swagger: '2.0'
info:
  version: -2.0
  title: video surveillance `as-if-truth` API (#foolish|rubbish|unlimited)
host: api.pettystreamer.org
schemes:
  - https
definitions:
  Server:
    type: object
    required:
      - id
      - networkAddress
      - productName
      - vendor
    properties:
      id:
        type: integer
        format: int64
      networkAddress:
        type: string
      productName:
        type: string
      vendor:
        type: string
  NewServer:
    type: object
    allOf:
      - $ref: '#/definitions/Server'
      - required:
          - networkAddress
        properties:
          description:
            type: integer
            format: int64
  Camera:
    type: object
    required:
      - id
      - networkAddress
      - location
      - serverRelId
      - productName
      - vendor
    properties:
      id:
        type: integer
        format: int64
      networkAddress:
        type: string
      location:
        type: string
      serverRelId:
        type: integer
        format: int64
      productName:
        type: string
      vendor:
        type: string
  NewCamera:
    type: object
    allOf:
      - $ref: '#/definitions/Camera'
      - required:
          - networkAddress
          - location
        properties:
          description:
            type: integer
            format: int64
  Record:
    type: object
    required:
      - id
      - cameraRelId
      - fileName
      - fileExtension
      - fileSize
      - duration
      - timeStart
      - timeFinish
    properties:
      id:
        type: integer
        format: int64
      cameraRelId:
        type: integer
        format: int64
      fileName:
        type: string
      fileExtension:
        type: string
      fileSize:
        type: integer
        format: int32
      duration:
        type: string
        format: date-time
      timeStart:
        type: string
        format: date-time
      timeFinish:
        type: string
        format: date-time
  NewRecord:
    type: object
    allOf:
      - $ref: '#/definitions/Record'
      - required:
          - fileName
          - fileExtension
          - fileSize
          - duration
          - timeStart
          - timeFinish
        properties:
          description:
            type: integer
            format: int64
  Pair1:
    properties:
      cameraId:
        type: integer
        format: int64
      serverId:
        type: integer
        format: int64
  Map1:
    description: camera-server associative map
    properties:
      default:
        $ref: '#/definitions/Pair1'
  Pair2:
    properties:
      cameraId:
        type: integer
        format: int64
      recordId:
        type: integer
        format: int64
  Map2:
    description: camera-record associative map
    properties:
      default:
        $ref: '#/definitions/Pair2'
  FileExtension:
    type: string
    enum: [AVI, FLV, MP4, MPEG, WMV]
tags:
  - name: server
  - name: camera
  - name: record
  - name: dispatcher
  - name: analytics controller
  - name: mediaserver
basePath: /
paths:
  /addServer:
    post:
      description: append new server to device DB
      tags:
        - server
      parameters:
        - name: server
          in: body
          required: true
          schema:
            $ref: '#/definitions/NewServer'
      responses:
        '200':
          description: server response
          schema:
            $ref: '#/definitions/Server'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /deleteServer:
    post:
      description: remove specific server from device DB
      tags:
        - server
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: server removed
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /setServerUpdate:
    put:
      description: push server attribute update to device DB
      tags:
        - server
        parameters:
          - name: id
            in: path
            required: true
            type: integer
            format: int64
        responses:
          '204':
            description: server update completed
          default:
            description: request failure
            schema:
              $ref: '#/definitions/Fail'
  /addCamera:
    post:
      description: append new camera to device DB
      tags:
        - camera
      parameters:
        - name: camera
          in: body
          required: true
          schema:
            $ref: '#/definitions/NewCamera'
      responses:
        '200':
          description: camera response
          schema:
            $ref: '#/definitions/Camera'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /deleteCamera:
    post:
      description: remove specific camera from device DB
      tags:
        - camera
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      responses:
         '204':
           description: camera removed
         default:
           description: request failure
           schema:
             $ref: '#/definitions/Fail'
  /setCameraUpdate:
    put:
      description: push camera attribute update to device DB
      tags:
        - camera
      parameters:
        - name: id
          in: path
          required: true
          type: integer
          format: int64
      responses:
          '204':
            description: camera update completed
          default:
            description: request failure
            schema:
              $ref: '#/definitions/Fail'
  /addRecord:
    post:
      description: append new record to respective DB
      tags:
        - record
      parameters:
        - name: record
          in: body
          required: true
          schema:
            $ref: '#/definitions/NewRecord'
      responses:
        '200':
          description: record response
          schema:
            $ref: '#/definitions/Record'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'

  /findAllServers:
    get:
      description: extract entire lot of servers registered
      tags:
        - dispatcher
      responses:
        '200':
          description: set of server instances
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /findAllCameras:
    get:
      description: extract entire lot of cameras registered
      tags:
        - dispatcher
      responses:
        '200':
          description: set of camera instances
          schema:
            type: array
            items:
              $ref: '#/definitions/Camera'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /findServerByCamId/{cameraId}:
    get:
      description: extract a server instance by associate camera id
      tags:
        - dispatcher
      parameters:
        - name: cameraId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: server response
          schema:
            $ref: '#/definitions/Server'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /findCamerasByServerId/{serverId}:
    get:
      description: extract set of server-associate cameras
      tags:
        - dispatcher
      parameters:
        - name: serverId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: set of camera instances
          schema:
            type: array
            items:
              $ref: '#/definitions/Camera'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /findAllPairs:
    get:
      description: extract entire "camera - server" association map
      tags:
        - dispatcher
      responses:
        '200':
          description: camera-server mapped representation
          schema:
            type: array
            items:
              $ref: '#/definitions/Map1'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /runRoundRobin:
    get:
      description: Round Robin algorithm execution to draw an camera instance to an analytics server
      tags:
        - dispatcher
      parameters:
        - name: servers
          in: path
          required: true
          type: array
      responses:
        '200':
          description: server to be associated
          schema:
            type: object
            items:
              $ref: '#/definitions/Server'
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /bindCameraWithServer:
    get:
      description: set camera instance associate to server assigned
      tags:
        - dispatcher
      parameters:
        - name: serverId
          in: path
          required: true
          type: integer
          format: int64
        - name: cameraId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: association success
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'
  /unbindCamera:
    get:
      description: dissociate camera instance
      tags:
        - dispatcher
      parameters:
        - name: cameraId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: dissociation success
        default:
          description: request failure
          schema:
            $ref: '#/definitions/Fail'

